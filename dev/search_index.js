var documenterSearchIndex = {"docs":
[{"location":"functions/","page":"Functions","title":"Functions","text":"CurrentModule = KitePodModels","category":"page"},{"location":"functions/#Initialization-and-update","page":"Functions","title":"Initialization and update","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"init_kcu!(kcu::KCU, set::KiteUtils.Settings)\non_timer(kcu::KCU, dt = 0.0)","category":"page"},{"location":"functions/#KitePodModels.init_kcu!-Tuple{KCU, Settings}","page":"Functions","title":"KitePodModels.init_kcu!","text":"init_kcu!(kcu::KCU, set::KiteUtils.Settings)\n\nInititalze the model of the kite control unit (KCU).  The actual and the set values of depower are initialized to set.depower_offset * 0.01, the actual and the set values of steering to zero. \n\n\n\n\n\n","category":"method"},{"location":"functions/#KitePodModels.on_timer","page":"Functions","title":"KitePodModels.on_timer","text":"on_timer(kcu::KCU, dt = 0.0)\n\nMust be called at each clock tick. Parameter: Î”t in seconds     Updates the current values of steering and depower depending on the set values and the last value. If dt == 0.0, then it will be set to 1.0 / kcu.set.sample_freq .\n\n\n\n\n\n","category":"function"},{"location":"functions/#Input-and-Output","page":"Functions","title":"Input and Output","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"set_depower_steering(kcu::KCU, depower, steering)\nget_depower(kcu::KCU)\nget_steering(kcu::KCU)","category":"page"},{"location":"functions/#KitePodModels.set_depower_steering-Tuple{KCU, Any, Any}","page":"Functions","title":"KitePodModels.set_depower_steering","text":"set_depower_steering(kcu::KCU, depower, steering)\n\nSet the values of depower and steering. The value for depower must be between 0.0 and 1.0, the value for steering between -1.0 and +1.0 .\n\n\n\n\n\n","category":"method"},{"location":"functions/#KitePodModels.get_depower-Tuple{KCU}","page":"Functions","title":"KitePodModels.get_depower","text":"get_depower(kcu::KCU)\n\nRead the current depower value. Result will be between 0.0 and 1.0.\n\n\n\n\n\n","category":"method"},{"location":"functions/#KitePodModels.get_steering-Tuple{KCU}","page":"Functions","title":"KitePodModels.get_steering","text":"get_steering(kcu::KCU)\n\nRead the current depower value. Result will be between -1.0 and 1.0.\n\n\n\n\n\n","category":"method"},{"location":"functions/#Conversions","page":"Functions","title":"Conversions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"calc_alpha_depower(kcu::KCU, rel_depower)","category":"page"},{"location":"functions/#KitePodModels.calc_alpha_depower-Tuple{KCU, Any}","page":"Functions","title":"KitePodModels.calc_alpha_depower","text":"calc_alpha_depower(kcu::KCU, rel_depower)\n\nCalculate the change of the angle between the kite and the last tether segment [rad] as function of the actual rel_depower value. \n\nReturns nothing in case of error.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = KitePodModels","category":"page"},{"location":"#KitePodModels","page":"Home","title":"KitePodModels","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for KitePodModels.","category":"page"},{"location":"#Background","page":"Home","title":"Background","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A kite pod or kite control unit consists of one or two electric miniatur winches, that pull on two or three lines (attached to the kite) and allow to steer the kite and to change the angle of attack and thus the lift.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This software acts as controller: It has two inputs, the set values, and two outputs, the actual values.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Two P controllers are used. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The geometric nonlinearity due to the change of the effectiv drum diameter of the drum with the depower tape is taken into account.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download Julia 1.9 or later, if you haven't already. You can add KitePodModels from  Julia's package manager, by typing ","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\npkg\"add KitePodModels\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"at the Julia prompt.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you are using Windows, it is suggested to install git and bash, too. This is explained for example here: Julia on Windows .","category":"page"},{"location":"#Testing","page":"Home","title":"Testing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can run the unit test suite with the following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg\"test KitePodModels\"","category":"page"},{"location":"#Provides","page":"Home","title":"Provides","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"functions to initialize the simulator, to update the set values and to read the actual values\na function on_timer() that needs to be called once per time step\na function to convert the actual depower value into change of angle of attack","category":"page"},{"location":"#Step-response","page":"Home","title":"Step response","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Step Response)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Click on Functions on the left to see the exported functions.","category":"page"},{"location":"#Related","page":"Home","title":"Related","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The meta package KiteSimulators which contains all packages from Julia Kite Power Tools.\nthe package KiteUtils\nthe packages KiteModels and WinchModels and AtmosphericModels\nthe packages KiteControllers andKiteViewers","category":"page"},{"location":"","page":"Home","title":"Home","text":"Author: Uwe Fechner (uwe.fechner.msc@gmail.com)","category":"page"},{"location":"parameters/","page":"Parameters","title":"Parameters","text":"CurrentModule = KitePodModels","category":"page"},{"location":"parameters/#Configuration","page":"Parameters","title":"Configuration","text":"","category":"section"},{"location":"parameters/","page":"Parameters","title":"Parameters","text":"To configure the parameters of the KitePodSimulator, edit the file data/settings.yaml , or create a copy under a different name and change the name of the active configuration in the file data/system.yaml .","category":"page"},{"location":"parameters/#Parameters","page":"Parameters","title":"Parameters","text":"","category":"section"},{"location":"parameters/","page":"Parameters","title":"Parameters","text":"The following parameters are used by this package:","category":"page"},{"location":"parameters/","page":"Parameters","title":"Parameters","text":"kcu:\n    power2steer_dist: 1.3        #                                 [m]\n    depower_drum_diameter: 0.069 #                                 [m]\n    tape_thickness: 0.0006       #                                 [m]\n    v_depower: 0.075             # max velocity of depowering in units per second (full range: 1 unit)\n    v_steering: 0.2              # max velocity of steering in units per second   (full range: 2 units)\n    depower_gain: 3.0            # 3.0 means: more than 33% error -> full speed\n    steering_gain: 3.0\n\ndepower:\n    depower_offset: 23.6         # at rel_depower=0.236 the kite is fully powered [%]","category":"page"},{"location":"types/#Exported-Types","page":"Types","title":"Exported Types","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"CurrentModule = KitePodModels","category":"page"},{"location":"types/#Struct-KCU","page":"Types","title":"Struct KCU","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"KCU","category":"page"},{"location":"types/#KitePodModels.KCU","page":"Types","title":"KitePodModels.KCU","text":"mutable struct KCU\n\nStuct that is storing the settings and the state of the kite control unit. \n\n\n\n\n\n","category":"type"},{"location":"types/","page":"Types","title":"Types","text":"This struct stores the state of the KCU model. Only in unit tests it is allowed to access the members directly, otherwise use the input and output functions.","category":"page"}]
}
